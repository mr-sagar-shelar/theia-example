"use strict";
(self["webpackChunkbrowser_app"] = self["webpackChunkbrowser_app"] || []).push([["node_modules_theia_core_lib_browser-only_preload_frontend-only-preload-module_js"],{

/***/ "../node_modules/@theia/core/lib/browser-only/preload/frontend-only-preload-module.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@theia/core/lib/browser-only/preload/frontend-only-preload-module.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


// *****************************************************************************
// Copyright (C) 2023 TypeFox and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../node_modules/inversify/es/inversify.js");
const localization_server_1 = __webpack_require__(/*! ../../common/i18n/localization-server */ "../node_modules/@theia/core/lib/common/i18n/localization-server.js");
const os_1 = __webpack_require__(/*! ../../common/os */ "../node_modules/@theia/core/lib/common/os.js");
// loaded after regular preload module
exports["default"] = new inversify_1.ContainerModule((bind, unbind, isBound, rebind) => {
    const frontendOnlyLocalizationServer = {
        loadLocalization: async (languageId) => ({ translations: {}, languageId })
    };
    if (isBound(localization_server_1.LocalizationServer)) {
        rebind(localization_server_1.LocalizationServer).toConstantValue(frontendOnlyLocalizationServer);
    }
    else {
        bind(localization_server_1.LocalizationServer).toConstantValue(frontendOnlyLocalizationServer);
    }
    const frontendOnlyOSBackendProvider = {
        getBackendOS: async () => {
            if (window.navigator.platform.startsWith('Win')) {
                return os_1.OS.Type.Windows;
            }
            else if (window.navigator.platform.startsWith('Mac')) {
                return os_1.OS.Type.OSX;
            }
            else {
                return os_1.OS.Type.Linux;
            }
        }
    };
    if (isBound(os_1.OSBackendProvider)) {
        rebind(os_1.OSBackendProvider).toConstantValue(frontendOnlyOSBackendProvider);
    }
    else {
        bind(os_1.OSBackendProvider).toConstantValue(frontendOnlyOSBackendProvider);
    }
});


/***/ }),

/***/ "../node_modules/@theia/core/lib/common/i18n/localization-server.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@theia/core/lib/common/i18n/localization-server.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {


// *****************************************************************************
// Copyright (C) 2023 TypeFox and others.
//
// This program and the accompanying materials are made available under the
// terms of the Eclipse Public License v. 2.0 which is available at
// http://www.eclipse.org/legal/epl-2.0.
//
// This Source Code may also be made available under the following Secondary
// Licenses when the conditions for such availability set forth in the Eclipse
// Public License v. 2.0 are satisfied: GNU General Public License, version 2
// with the GNU Classpath Exception which is available at
// https://www.gnu.org/software/classpath/license.html.
//
// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0
// *****************************************************************************
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LocalizationServer = exports.LocalizationServerPath = void 0;
exports.LocalizationServerPath = '/localization-server';
exports.LocalizationServer = Symbol('LocalizationServer');


/***/ })

}]);
//# sourceMappingURL=node_modules_theia_core_lib_browser-only_preload_frontend-only-preload-module_js.js.map