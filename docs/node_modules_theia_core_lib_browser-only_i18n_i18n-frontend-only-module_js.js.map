{"version":3,"file":"node_modules_theia_core_lib_browser-only_i18n_i18n-frontend-only-module_js.js","mappings":";;;;;;;;;;AAAA,gFAAgF;AAChF,+CAA+C;AAC/C,EAAE;AACF,2EAA2E;AAC3E,mEAAmE;AACnE,wCAAwC;AACxC,EAAE;AACF,4EAA4E;AAC5E,8EAA8E;AAC9E,6EAA6E;AAC7E,yDAAyD;AACzD,uDAAuD;AACvD,EAAE;AACF,gFAAgF;AAChF,gFAAgF;;AAEhF,sGAA4C;AAC5C,gJAAuG;AACvG,+LAA0F;AAE1F,qBAAe,IAAI,2BAAe,CAAC,IAAI,CAAC,EAAE;IACtC,MAAM,QAAQ,GAA8B;QACxC,kBAAkB,EAAE,KAAK,IAAqB,EAAE,CAAC,IAAI;QACrD,kBAAkB,EAAE,KAAK,EAAE,WAAmB,EAAiB,EAAE;QAEjE,CAAC;QACD,qBAAqB,EAAE,KAAK,IAA6B,EAAE,CACvD,EAAE;QAEN,gBAAgB,EAAE,KAAK,EAAE,WAAmB,EAAyB,EAAE,CAAC,CAAC;YACrE,YAAY,EAAE,EAAE;YAChB,UAAU,EAAE,IAAI;SACnB,CAAC;KACL,CAAC;IACF,IAAI,CAAC,wCAAyB,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;IAC1D,IAAI,CAAC,sDAAwB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;AAC/D,CAAC,CAAC,CAAC","sources":["webpack:///../node_modules/@theia/core/src/browser-only/i18n/i18n-frontend-only-module.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2023 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from 'inversify';\nimport { AsyncLocalizationProvider, LanguageInfo, Localization } from '../../common/i18n/localization';\nimport { LanguageQuickPickService } from '../../browser/i18n/language-quick-pick-service';\n\nexport default new ContainerModule(bind => {\n    const i18nMock: AsyncLocalizationProvider = {\n        getCurrentLanguage: async (): Promise<string> => 'en',\n        setCurrentLanguage: async (_languageId: string): Promise<void> => {\n\n        },\n        getAvailableLanguages: async (): Promise<LanguageInfo[]> =>\n            []\n        ,\n        loadLocalization: async (_languageId: string): Promise<Localization> => ({\n            translations: {},\n            languageId: 'en'\n        })\n    };\n    bind(AsyncLocalizationProvider).toConstantValue(i18nMock);\n    bind(LanguageQuickPickService).toSelf().inSingletonScope();\n});\n"],"names":[],"sourceRoot":""}