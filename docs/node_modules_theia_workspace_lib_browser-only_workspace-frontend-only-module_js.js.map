{"version":3,"file":"node_modules_theia_workspace_lib_browser-only_workspace-frontend-only-module_js.js","mappings":"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","sources":["webpack:///../node_modules/@theia/workspace/src/browser-only/browser-only-workspace-server.ts?","webpack:///../node_modules/@theia/workspace/src/browser-only/workspace-frontend-only-module.ts?","webpack:///../node_modules/@theia/workspace/src/common/index.ts?","webpack:///../node_modules/@theia/workspace/src/common/untitled-workspace-service.ts?","webpack:///../node_modules/@theia/workspace/src/common/workspace-protocol.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2023 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { WorkspaceServer } from '../common/workspace-protocol';\nimport { ILogger, isStringArray } from '@theia/core';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\n\nexport const RECENT_WORKSPACES_LOCAL_STORAGE_KEY = 'workspaces';\n\n@injectable()\nexport class BrowserOnlyWorkspaceServer implements WorkspaceServer {\n\n    @inject(ILogger)\n    protected logger: ILogger;\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    async getRecentWorkspaces(): Promise<string[]> {\n        const storedWorkspaces = localStorage.getItem(RECENT_WORKSPACES_LOCAL_STORAGE_KEY);\n        if (!storedWorkspaces) {\n            return [];\n        }\n        try {\n            const parsedWorkspaces = JSON.parse(storedWorkspaces);\n            if (isStringArray(parsedWorkspaces)) {\n                return parsedWorkspaces;\n            }\n        } catch (e) {\n            this.logger.error(e);\n            return [];\n        }\n        return [];\n    }\n\n    async getMostRecentlyUsedWorkspace(): Promise<string | undefined> {\n        const workspaces = await this.getRecentWorkspaces();\n        return workspaces[0];\n    }\n\n    async setMostRecentlyUsedWorkspace(uri: string): Promise<void> {\n        const workspaces = await this.getRecentWorkspaces();\n        if (workspaces.includes(uri)) {\n            workspaces.splice(workspaces.indexOf(uri), 1);\n        }\n        localStorage.setItem(RECENT_WORKSPACES_LOCAL_STORAGE_KEY, JSON.stringify([uri, ...workspaces]));\n    }\n\n    async removeRecentWorkspace(uri: string): Promise<void> {\n        const workspaces = await this.getRecentWorkspaces();\n        if (workspaces.includes(uri)) {\n            workspaces.splice(workspaces.indexOf(uri), 1);\n        }\n        localStorage.setItem(RECENT_WORKSPACES_LOCAL_STORAGE_KEY, JSON.stringify(workspaces));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule, interfaces } from '@theia/core/shared/inversify';\nimport { BrowserOnlyWorkspaceServer } from './browser-only-workspace-server';\nimport { WorkspaceServer } from '../common';\n\nexport default new ContainerModule((bind: interfaces.Bind, unbind: interfaces.Unbind, isBound: interfaces.IsBound, rebind: interfaces.Rebind) => {\n    bind(BrowserOnlyWorkspaceServer).toSelf().inSingletonScope();\n    if (isBound(WorkspaceServer)) {\n        rebind(WorkspaceServer).toService(BrowserOnlyWorkspaceServer);\n    } else {\n        bind(WorkspaceServer).toService(BrowserOnlyWorkspaceServer);\n    }\n});\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './workspace-protocol';\nexport * from './workspace-file-service';\nexport * from './untitled-workspace-service';\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { MaybePromise } from '@theia/core';\nimport { WorkspaceFileService } from './workspace-file-service';\n\n@injectable()\nexport class UntitledWorkspaceService {\n\n    @inject(WorkspaceFileService)\n    protected readonly workspaceFileService: WorkspaceFileService;\n\n    isUntitledWorkspace(candidate?: URI): boolean {\n        return !!candidate && this.workspaceFileService.isWorkspaceFile(candidate) && candidate.path.base.startsWith('Untitled');\n    }\n\n    async getUntitledWorkspaceUri(configDirUri: URI, isAcceptable: (candidate: URI) => MaybePromise<boolean>, warnOnHits?: () => unknown): Promise<URI> {\n        const parentDir = configDirUri.resolve('workspaces');\n        const workspaceExtensions = this.workspaceFileService.getWorkspaceFileExtensions();\n        const defaultFileExtension = workspaceExtensions[this.workspaceFileService.defaultFileTypeIndex];\n        let uri;\n        let attempts = 0;\n        do {\n            attempts++;\n            uri = parentDir.resolve(`Untitled-${Math.round(Math.random() * 1000)}.${defaultFileExtension}`);\n            if (attempts === 10) {\n                warnOnHits?.();\n            }\n            if (attempts === 50) {\n                throw new Error('Workspace Service: too many attempts to find unused filename.');\n            }\n        } while (!(await isAcceptable(uri)));\n        return uri;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const workspacePath = '/services/workspace';\n\n/**\n * The JSON-RPC workspace interface.\n */\nexport const WorkspaceServer = Symbol('WorkspaceServer');\nexport interface WorkspaceServer {\n\n    /**\n     * Returns with a promise that resolves to the most recently used workspace folder URI as a string.\n     * Resolves to `undefined` if the workspace folder is not yet set.\n     */\n    getMostRecentlyUsedWorkspace(): Promise<string | undefined>;\n\n    /**\n     * Sets the desired string representation of the URI as the most recently used workspace folder.\n     */\n    setMostRecentlyUsedWorkspace(uri: string): Promise<void>;\n\n    /**\n     * Removes a workspace from the list of recently opened workspaces.\n     *\n     * @param uri the workspace uri.\n     */\n    removeRecentWorkspace(uri: string): Promise<void>;\n\n    /**\n     * Returns list of recently opened workspaces as an array.\n     */\n    getRecentWorkspaces(): Promise<string[]>\n}\n"],"names":[],"sourceRoot":""}